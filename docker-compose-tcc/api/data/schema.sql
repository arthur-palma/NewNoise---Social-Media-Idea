DROP TABLE IF EXISTS comentario CASCADE;
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS permissao CASCADE;
DROP TABLE IF EXISTS postagem CASCADE;
DROP TABLE IF EXISTS solicitacao_amizade CASCADE;
DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS amizade CASCADE;



CREATE TABLE IF NOT EXISTS usuario
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    nome character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    apelido character varying(50) COLLATE pg_catalog."default",
    data_nascimento date NOT NULL,
    senha character varying(128) COLLATE pg_catalog."default" NOT NULL,
    imagem_perfil character varying(512) COLLATE pg_catalog."default",
    ativo boolean NOT NULL,
    CONSTRAINT usuario_pkey PRIMARY KEY (id),
    CONSTRAINT usuario_email_key UNIQUE (email)
    );


CREATE TABLE IF NOT EXISTS postagem
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    usuario_id bigint NOT NULL,
    texto character varying(500) COLLATE pg_catalog."default" NOT NULL,
    visibilidade character varying(10) COLLATE pg_catalog."default" NOT NULL,
    data_postagem timestamp without time zone NOT NULL,
    CONSTRAINT postagem_pkey PRIMARY KEY (id),
    CONSTRAINT postagem_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES usuario (id)
    );


CREATE TABLE IF NOT EXISTS solicitacao_amizade
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    solicitante_id bigint NOT NULL,
    solicitado_id bigint NOT NULL,
    status character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT solicitacao_amizade_pkey PRIMARY KEY (id),
    CONSTRAINT solicitacao_amizade_solicitado_id_fkey FOREIGN KEY (solicitado_id) REFERENCES usuario (id),
    CONSTRAINT solicitacao_amizade_solicitante_id_fkey FOREIGN KEY (solicitante_id) REFERENCES usuario (id)
    );


CREATE TABLE IF NOT EXISTS permissao
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    funcao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    usuario_id bigint NOT NULL,
    CONSTRAINT permissao_pkey PRIMARY KEY (id),
    CONSTRAINT uk_permissao UNIQUE (funcao, usuario_id),
    CONSTRAINT permissao_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES usuario (id)
    );


CREATE TABLE IF NOT EXISTS curtida
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    usuario_id bigint NOT NULL,
    postagem_id bigint NOT NULL,
    CONSTRAINT curtida_pkey PRIMARY KEY (id),
    CONSTRAINT unique_curtida_usuario_postagem UNIQUE (usuario_id, postagem_id),
    CONSTRAINT curtida_postagem_id_fkey FOREIGN KEY (postagem_id) REFERENCES postagem (id),
    CONSTRAINT curtida_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES usuario (id)
    );


CREATE TABLE IF NOT EXISTS comentario
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    usuario_id bigint NOT NULL,
    postagem_id bigint NOT NULL,
    texto character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_comentario timestamp without time zone NOT NULL,
    CONSTRAINT comentario_pkey PRIMARY KEY (id),
    CONSTRAINT comentario_postagem_id_fkey FOREIGN KEY (postagem_id) REFERENCES postagem (id),
    CONSTRAINT comentario_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES usuario (id)
    );


CREATE TABLE IF NOT EXISTS amizade
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    usuario_id bigint NOT NULL,
    amigo_id bigint NOT NULL,
    CONSTRAINT amizade_pkey PRIMARY KEY (id),
    CONSTRAINT amizade_amigo_id_fkey FOREIGN KEY (amigo_id) REFERENCES usuario (id),
    CONSTRAINT amizade_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES usuario (id)

    );